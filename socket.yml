name: synq_socket
version: 0.1
description: "Socket used to enable video synchronization between Synq and Syncano services"
author:
  name: Eyedea AS
  email: hello@eyedea.io

config:
   prompt:
      syncano_api_key:
        type: string
        description: "A Syncano instance key"
      syncano_user_key:
        type: string
        description: "A Syncano user key"
      synq_api_key:
        type: string
        description: "A Synq API project key"
      syncano_instance_name:
        type: string
        description: "A Syncano instance name where Socket will be installed"
      synq_api_link:
        type: string
        description: "A Synq link to api ( ex. http://api.staging.synq.fm/v1/ )"
      synq_link:
        type: string
        description: "A Synq link to embed site ( ex. http://staging.synq.fm/ )"
      video_storage:
        type: string
        description: "A Syncano class name, where video objects will be hold"

channels:
  video_status:
    description: "Used to handle current video status"
    type: default
    permissions:
      group: publish
      other: none

triggers:
  handle_video_change:
    signal: update
    class: video_storage
    script: upload
  handle_video_create:
    signal: create
    class: video_storage
    script: create

endpoints:
  webhook:
    POST:
      script: webhook
      description: "Used to get information about current video status from Synq service"

      parameters:
        video_id:
          type: string
          description: "Id of Synq changed video"
          example: "09ecc6a23094d67bd11c2a7543872fb"
        event:
          type: string
          description: "Current Synq status of video"
          example: "upload_video"

      response:
        mimetype: application/json
        examples:
          - exit_code: 200
            description: "Successful webhook"
            example: >
              [
                {
                    "video_id": "09ecc6a23094d67bd11c2a7543872fb",
                    "event": "upload_video",
                    "success": true
                }
              ]
          - exit_code: 404
            description: "Unsuccesful webhook"
            example: >
              {status: 404, message: "Not Found"}
  create:
    POST:
      script: create
      description: "Used to create object inside Synq, based on Syncano object"

      parameters:
        id:
          type: integer
          description: "Id of Syncano object containing the video"
          example: "231"
        video:
          type: file
          description: "Video file that was uploaded to Syncano"
          example: "http://google.com/simple_file.mp4"

      response:
        mimetype: application/json
        examples:
          - exit_code: 200
            description: "Successful create"
            example: >
              [
                {
                    "success": true
                }
              ]
          - exit_code: 404
            description: "Unsuccesful create"
            example: >
              {status: 404, message: "Not Found"}
  upload:
    POST:
      script: upload
      description: "Used to upload video from Syncano to Sync"

      parameters:
        id:
          type: integer
          description: "Id of Syncano object containing the video"
          example: "231"
        video:
          type: file
          description: "Video file that will be uploaded to Synq"
          example: "http://google.com/simple_file.mp4"
        synq_video_id:
          type: string
          description: "Id of Synq object where video will be uploaded"
          example: "eb82b8d8580d4634ba150823ff476d50"

      response:
        mimetype: application/json
        examples:
          - exit_code: 200
            description: "Successful upload"
            example: >
              [
                {
                    "success": true
                }
              ]
          - exit_code: 404
            description: "Unsuccesful upload"
            example: >
              {status: 404, message: "Not Found"}

  uploader:
    POST:
      script: uploader
      description: "Used to generate Synq widget based on Syncano data object"

      parameters:
        id:
          type: integer
          description: "Id of Syncano object containing the video"
          example: "231"

      response:
        mimetype: application/json
        examples:
          - exit_code: 200
            description: "Success widget creation"
            example: >
              [
                {
                    "status": 200,
                    "message": "https://www.synq.fm/uplader/430ae5110e5c4319975d78487086082c?token=692996dd57684aa484bdf0a81dbb1ec2"
                }
              ]
          - exit_code: 404
            description: "Unsuccesful widget creation"
            example: >
              [
                {
                    "status": 404,
                    "message": "Syncano object 'id' cannot be found in request"
                }
              ]

  stream:
    POST:
      script: stream
      description: "Used to create object inside Synq, used as stream destination"

      response:
        mimetype: application/json
        examples:
          - exit_code: 200
            description: "Successful stream"
            example: >
              [
                {
                    "success": true
                }
              ]
          - exit_code: 404
            description: "Unsuccesful stream"
            example: >
              {status: 404, message: "Not Found"}
  delete:
    POST:
      script: delete
      description: "Used to delete video from Syncano and Synq services"

      parameters:
        id:
          type: integer
          description: "Id of Syncano object containing the video"
          example: "231"

      response:
        mimetype: application/json
        examples:
          - exit_code: 200
            description: "Successful delete"
            example: >
              [
                {
                    "success": true
                }
              ]
          - exit_code: 404
            description: "Unsuccesful upload"
            example: >
              {status: 404, message: "Not Found"}
dependencies:
  scripts:
    webhook:
      runtime_name: python_library_v5.0
      file: scripts/webhook.py
    upload:
      runtime_name: python_library_v5.0
      file: scripts/upload.py
    uploader:
      runtime_name: python_library_v5.0
      file: scripts/uploader.py
    delete:
      runtime_name: python_library_v5.0
      file: scripts/delete.py
    create:
      runtime_name: python_library_v5.0
      file: scripts/create.py
    stream:
      runtime_name: python_library_v5.0
      file: scripts/stream.py

  classes:
    video_storage:
      channel: video_status
      description: "Used to hold video files backup on Syncano instance"
      schema:
        - name: video
          type: string
        - name: filename
          type: string
          filter_index: true
          order_index: true
        - name: duration
          type: float
        - name: height
          type: integer
        - name: synq_widget
          type: string
        - name: width
          type: integer
        - name: meta
          type: string
          filter_index: true
        - name: extension
          type: string
        - name: synq_video_id
          type: string
          filter_index: true
        - name: synq_upload
          type: object
        - name: embeded_url
          type: text
        - name: synq_state
          type: string
          filter_index: true
          order_index: true
